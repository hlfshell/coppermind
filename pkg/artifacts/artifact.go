package artifacts

import "time"

/*
Artifact is a generic interface representing entities
that are passed into or created by hte AI agent on
messages. Examples of possible artifacts:
1 - An image generated by request to the AI
2 - A document we are asking the AI questions about
3 - An e-mail the AI generated to send
4 - Voice input or output for the conversation
*/
type Artifact interface {
	FromData(data ArtifactData) error
	GetData() (ArtifactData, error)
}

/*
ArtifactData is a generic object that is passed into
or created by the AI agent on mesages. Examples
of possible artifacts:
1 - An image generated by request to the AI
2 - A document we are asking the AI questions about
3 - An e-mail the AI generated to send
4 - Voice input or output for the conversation
*/
type ArtifactData struct {
	ID        string    `json:"id,omitempty" db:"id"`
	Message   string    `json:"message,omitempty" db:"message"`
	Type      string    `json:"type,omitempty" db:"type"`
	CreatedAt time.Time `json:"created_at,omitempty" db:"created_at"`
	Data      []byte    `json:"data,omitempty" db:"data"`
}

func (data *ArtifactData) Equal(other *ArtifactData) bool {
	createdAtDifference := data.CreatedAt.Sub(other.CreatedAt)
	if createdAtDifference < 0 {
		createdAtDifference = -createdAtDifference
	}

	return data.ID == other.ID &&
		data.Type == other.Type &&
		data.Message == other.Message &&
		createdAtDifference < time.Second &&
		string(data.Data) == string(other.Data)
}
